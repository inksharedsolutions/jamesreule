{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/nav.js","webpack:///./src/components/non-front-banner.js"],"names":["Contact","props","title","pathExt","path","spanFirst","contextHeading","className","onSubmit","e","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","onreadystatechange","readyState","DONE","status","alert","reset","console","log","send","id","name","type","value","htmlFor","placeholder","required","style","color","href","Nav","refSpan","useRef","useState","toggled","setToggled","Listed","map","newUrl","replace","trim","toLowerCase","filterUrl","to","clickEvent","alt","src","Logo","onClick","ref","class","NFB"],"mappings":"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","file":"component---src-pages-contact-js-6227cdf328865e609acb.js","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport Inputs from \"../components/Inputs/inputs\"\r\nimport Nav from '../components/nav'\r\nimport Banner from '../components/non-front-banner'\r\nimport { Helmet } from \"react-helmet\"\r\n\r\n\r\nconst Contact = (props) => {\r\n\r\n\r\n    function OnSubmitForm(e) {\r\n\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const data = new FormData(form);\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(form.method, form.action);\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n            if (xhr.status === 200) {\r\n                alert('Succesfully sent!')\r\n                form.reset();\r\n            } else {\r\n                console.log('something went wrong')\r\n            }\r\n        };\r\n\r\n        xhr.send(data);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Layout>\r\n            <Helmet title='Contact | James Reule '/>\r\n                <Nav pathExt={props.path} />\r\n                <Banner\r\n                    spanFirst={``}\r\n                    contextHeading={`Contact`}\r\n                />\r\n\r\n                <main className=\"flexMainContainer\">\r\n                    <div className=\"flex-container-fx\">\r\n                        <p className=\"contactMessage\">\r\n                            Hello! Are you having a good day? Anyway, if you have any concerns or you just want to\r\n                            share something, please feel free to drop me a line. I would love to hear anything from you.\r\n                            </p>\r\n\r\n                        <form\r\n                            onSubmit={OnSubmitForm}\r\n                            action=\"https://formspree.io/f/mbjqoneo\"\r\n                            method=\"POST\">\r\n\r\n                            <div className=\"columns\" id=\"form-wrapper\">\r\n                                <div className=\"column is-half\">\r\n\r\n                                    <Inputs\r\n                                        name=\"fullname\"\r\n                                        type=\"text\" />\r\n                                    <input\r\n                                        name=\"author\"\r\n                                        type=\"hidden\"  value = 'James Reule'/>\r\n\r\n                                    <Inputs\r\n                                        name=\"phone\"\r\n                                        type=\"text\" />\r\n\r\n                                </div>\r\n\r\n                                <div className=\"column is-half\">\r\n\r\n                                    <Inputs\r\n                                        name=\"email\"\r\n                                        type=\"email\" />\r\n\r\n                                    <Inputs\r\n                                        name=\"address\"\r\n                                        type=\"text\" />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"columns\">\r\n                                <div className=\"column is-full\" id=\"textAreaContainer\">\r\n                                    <label htmlFor=\"message\"> Message\t</label>\r\n                                    <textarea type=\"text\" name='message' id=\"message\"\r\n                                        className=\"textArea\"\r\n                                        placeholder='Message'\r\n                                        required />\r\n\r\n\r\n                                    <div className=\"buttonContainer\">\r\n                                        <input\r\n                                            className=\"abtiaryButton\"\r\n                                            value=\"Submit\"\r\n                                            type=\"submit\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n\r\n                        <div className=\"info-section-address\">\r\n                            <span>\r\n                                <h5>Address</h5>\r\n                                <p style={{color: 'black'}}>831 N Tatnall Street, Suite M #188, Wilmington, DE 19801</p>\r\n                            </span>\r\n\r\n                            <span>\r\n                                <h5>Phone</h5>\r\n                                <a href=\"tel:8883237009\" style={{color: 'black'}}>888-323-7009</a>\r\n                            </span>\r\n\r\n                            <span>\r\n                                <h5>Email</h5>\r\n                                <a href=\"mailto:publish@stratton-press.com\" style={{color: 'black'}}>publish@stratton-press.com</a>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'gatsby';\r\nimport Logo from '../../static/logo/logo.png'\r\n\r\nconst Nav = (props) => {\r\n\r\n    const refSpan = useRef();\r\n    const [toggled, setToggled] = useState(false);\r\n\r\n    const pages = [\r\n        'Home',\r\n        'About-the-Author',\r\n        'About-the-Book',\r\n        'Contact'\r\n    ]\r\n\r\n    let Listed = pages.map((e) => {\r\n\r\n        var newUrl = ((e).replace(/[ /]/g, \"-\").trim().toLowerCase());\r\n        let filterUrl = (newUrl === 'home') ? '/' : `/${newUrl}`;\r\n\r\n        return (\r\n            <li>\r\n                <Link\r\n                    to={filterUrl}>\r\n                    {e.replace(/[-/]/g, \" \").trim()}\r\n                </Link>\r\n            </li>\r\n        )\r\n\r\n    })\r\n\r\n    const clickEvent = (e) => {\r\n        setToggled(!toggled);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navigation\">\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        Home\r\n\t\t\t\t\t</Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/about-the-author\">\r\n                        About the Author\r\n\t\t\t\t\t</Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/\">\r\n                        <img alt=\"author-logo\" src={Logo} />\r\n                    </Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/about-the-book\">\r\n                        About the Book\r\n\t\t\t\t\t</Link>\r\n                </li>\r\n\r\n                <li>\r\n                    <Link to=\"/contact\">\r\n                        Contact\r\n\t\t\t\t\t</Link>\r\n                </li>\r\n            </nav>\r\n\r\n\r\n            <nav className=\"burger-nav\">\r\n                <h1>\r\n                    <Link\r\n                        style={props.pathExt === '/'\r\n                            || props.pathExt === '' ? {\r\n                                color: 'rgb(255, 202, 0)'\r\n                            } : {\r\n                                color: '#000'\r\n                            }}\r\n                        to=\"/\">\r\n\r\n                        <img\r\n                            className=\"logo-img\"\r\n                            src={Logo}\r\n                            alt=\"logo\"\r\n                        />\r\n\r\n                    </Link>\r\n                </h1>\r\n\r\n                {/* <h1></h1> */}\r\n\r\n                <ul\r\n                    className=\"hamburger-ul\"\r\n                    onClick={e => clickEvent(e)}\r\n                    ref={refSpan}>\r\n\r\n                    <span className=\"hamburger-span\"></span>\r\n                    <span className=\"hamburger-span\"></span>\r\n\r\n                </ul>\r\n\r\n                <section className={toggled ? 'active-nav' : 'non-active-nav'}>\r\n\r\n                    <span className=\"close-mark\" onClick={e => clickEvent(e)}>\r\n                        <span className=\"hamburger-x-mark\"></span>\r\n                        <span className=\"hamburger-x-mark\"></span>\r\n                    </span>\r\n\r\n                    <ul>\r\n                        <p class=\"list-label\">\r\n                            Navigations\r\n\t\t\t\t\t\t</p>\r\n\r\n                        {Listed}\r\n\r\n                    </ul>\r\n\r\n                </section>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\n\r\n\r\n\r\nconst NFB = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"web-banner\" >\r\n                <div className=\"container\">\r\n                    <div className=\"wrapper-ds\">\r\n                        <span>\r\n                            {props.spanFirst}\r\n                        </span>\r\n                        <h1>\r\n                            {props.contextHeading}\r\n                        </h1>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NFB"],"sourceRoot":""}